name: SageMaker Notebook Workflow

on:
  workflow_dispatch: # Manually triggered workflow
  schedule:
    - cron: "*/2 * * * *"

jobs:
  start_notebook:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # - name: Set up AWS credentials
      #   run: |
      #     echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
      #     echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV

      - name: Start SageMaker Notebook Instance
        run: |
          aws sagemaker start-notebook-instance --notebook-instance-name sample --region ap-south-1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Wait for the notebook instance to be in the 'InService' state

  clone_and_run:
    runs-on: [self-hosted, aws]

    steps:
      - name: Checkout repository
        run: |
          git clone https://github.com/AdityaSai2004/trigger.git
          cd trigger

      - name: Run Shell Script
        run: |
          chmod +x runner.sh
          ./runner.sh
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # # Optionally, stop the notebook instance when done
      # - name: Stop SageMaker Notebook Instance
      #   run: |
      #     # Use AWS CLI or SDK to stop the SageMaker notebook instance
      #     # Example: aws sagemaker stop-notebook-instance --notebook-instance-name YourNotebookInstanceName
